#================================================================================
# CRYPTOGRAPHY CONSTRAINTS
#================================================================================
esac-commons.crypto.constraints.key.rsa.size.min=#{ (2 * T(com.esacinc.commons.utils.EsacDataUtils).BYTES_IN_KB) }

#================================================================================
# CRYPTOGRAPHY CREDENTIALS: CERTIFICATE AUTHORITY
#================================================================================
esac-commons.crypto.cred.ca.subject.cn=esac-commons_ca
esac-commons.crypto.cred.ca.untrusted.subject.cn=${esac-commons.crypto.cred.ca.subject.cn}_untrusted

#================================================================================
# CRYPTOGRAPHY KEY STORES: CERTIFICATE AUTHORITY
#================================================================================
esac-commons.crypto.store.key.ca.file=${esac-commons.app.conf.ssl.dir}/esac-commons_store_key_ca.#{ T(com.esacinc.commons.io.EsacFileNameExtensions).JKS }
esac-commons.crypto.store.key.ca.pass=storepass

#================================================================================
# CRYPTOGRAPHY KEY STORE ENTRIES: CERTIFICATE AUTHORITY
#================================================================================
esac-commons.crypto.store.key.ca.entry.ca.alias=${esac-commons.crypto.cred.ca.subject.cn}
esac-commons.crypto.store.key.ca.entry.ca.pass=${esac-commons.crypto.store.key.ca.pass}

#================================================================================
# CRYPTOGRAPHY OCSP
#================================================================================
esac-commons.crypto.ocsp.conn.timeout=#{ (5 * T(com.esacinc.commons.time.utils.EsacDateUtils).MS_IN_SEC) }
esac-commons.crypto.ocsp.nonce.size=32
esac-commons.crypto.ocsp.read.timeout=#{ (5 * T(com.esacinc.commons.time.utils.EsacDateUtils).MS_IN_SEC) }
esac-commons.crypto.ocsp.url=${esac-commons.crypto.ocsp.server.scheme}://#{ inetAddrLoopback.hostName }:${esac-commons.crypto.ocsp.server.port.http}

#================================================================================
# CRYPTOGRAPHY OCSP SERVER
#================================================================================
esac-commons.crypto.ocsp.server.port.http=11888
esac-commons.crypto.ocsp.server.req.task.exec.keep.alive.timeout=5
esac-commons.crypto.ocsp.server.req.task.exec.pool.size.max=64
esac-commons.crypto.ocsp.server.scheme=#{ T(com.esacinc.commons.net.EsacSchemes).HTTP }
esac-commons.crypto.ocsp.server.task.exec.pool.size.core=1
esac-commons.crypto.ocsp.server.task.exec.pool.size.max=5

#================================================================================
# CRYPTOGRAPHY SSL
#================================================================================
esac-commons.crypto.ssl.cipher.suites=\
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,\
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,\
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,\
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,\
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,\
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,\
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,\
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,\
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,\
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,\
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,\
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,\
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,\
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,\
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,\
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,\
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,\
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA,\
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA,\
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,\
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,\
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA
